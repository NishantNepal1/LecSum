{"ast":null,"code":"import axios from 'axios';\nexport default class BaseAPI {\n  _sendAxiosRequest(reqType, url, payload) {\n    let method = null;\n    let callMethod = null;\n    if (reqType === \"get\") method = axios.get;else if (reqType === \"post\") method = axios.post;else if (reqType === \"put\") method = axios.put;else if (reqType === \"delete\") method = axios.delete;else if (reqType === \"patch\") method = axios.patch;\n    return new Promise((res, rej) => {\n      if (payload) {\n        callMethod = () => method(url, payload);\n      } else {\n        if (reqType !== \"get\" && reqType !== \"delete\") {\n          rej(new Error(`Requests of type ${reqType} must contain payload. If you want to provide empty payload call with {}`));\n        } else callMethod = () => method(url);\n      }\n      callMethod().then(resp => {\n        res(resp);\n      }).catch(err => {\n        rej(err);\n      });\n    });\n  }\n}","map":{"version":3,"names":["axios","BaseAPI","_sendAxiosRequest","reqType","url","payload","method","callMethod","get","post","put","delete","patch","Promise","res","rej","Error","then","resp","catch","err"],"sources":["C:/Users/shadi/Desktop/CS350/LecSum/frontend/src/API/base.js"],"sourcesContent":["import axios from 'axios'\n\nexport default class BaseAPI{\n  _sendAxiosRequest(reqType, url, payload){\n    let method = null;\n    let callMethod = null;\n    if (reqType===\"get\") method = axios.get;\n    else if(reqType===\"post\") method = axios.post;\n    else if(reqType===\"put\") method = axios.put;\n    else if(reqType===\"delete\") method = axios.delete;\n    else if (reqType===\"patch\") method = axios.patch;\n\n    return new Promise((res, rej) => {\n      if (payload){\n        callMethod = () => method(url, payload)\n      }\n      else{\n        if (reqType!==\"get\" && reqType!==\"delete\"){\n          rej(new Error(`Requests of type ${reqType} must contain payload. If you want to provide empty payload call with {}`))\n        }\n        else\n          callMethod = () => method(url)\n      }\n      callMethod()\n      .then((resp)=>{\n        res(resp)\n      })\n      .catch((err)=>{\n        rej(err)\n      })\n    })\n  }\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,eAAe,MAAMC,OAAO;EAC1BC,iBAAiB,CAACC,OAAO,EAAEC,GAAG,EAAEC,OAAO,EAAC;IACtC,IAAIC,MAAM,GAAG,IAAI;IACjB,IAAIC,UAAU,GAAG,IAAI;IACrB,IAAIJ,OAAO,KAAG,KAAK,EAAEG,MAAM,GAAGN,KAAK,CAACQ,GAAG,CAAC,KACnC,IAAGL,OAAO,KAAG,MAAM,EAAEG,MAAM,GAAGN,KAAK,CAACS,IAAI,CAAC,KACzC,IAAGN,OAAO,KAAG,KAAK,EAAEG,MAAM,GAAGN,KAAK,CAACU,GAAG,CAAC,KACvC,IAAGP,OAAO,KAAG,QAAQ,EAAEG,MAAM,GAAGN,KAAK,CAACW,MAAM,CAAC,KAC7C,IAAIR,OAAO,KAAG,OAAO,EAAEG,MAAM,GAAGN,KAAK,CAACY,KAAK;IAEhD,OAAO,IAAIC,OAAO,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;MAC/B,IAAIV,OAAO,EAAC;QACVE,UAAU,GAAG,MAAMD,MAAM,CAACF,GAAG,EAAEC,OAAO,CAAC;MACzC,CAAC,MACG;QACF,IAAIF,OAAO,KAAG,KAAK,IAAIA,OAAO,KAAG,QAAQ,EAAC;UACxCY,GAAG,CAAC,IAAIC,KAAK,CAAE,oBAAmBb,OAAQ,0EAAyE,CAAC,CAAC;QACvH,CAAC,MAECI,UAAU,GAAG,MAAMD,MAAM,CAACF,GAAG,CAAC;MAClC;MACAG,UAAU,EAAE,CACXU,IAAI,CAAEC,IAAI,IAAG;QACZJ,GAAG,CAACI,IAAI,CAAC;MACX,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAG;QACZL,GAAG,CAACK,GAAG,CAAC;MACV,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}